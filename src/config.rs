use std::time::Duration;

pub const PIXEL_DENSITY: u32 = 20;

pub const CHIP8_WIDTH: u32 = 64;
pub const CHIP8_HEIGHT: u32 = 32;

pub const FRAME_RATE: u32 = 60;
pub const WINDOW_WIDTH: u32 = PIXEL_DENSITY * CHIP8_WIDTH;
pub const WINDOW_HEIGHT: u32 = PIXEL_DENSITY * CHIP8_HEIGHT;

pub const CPU_CLOCK_SPEED_HZ: u32 = 500;
pub const RAM_CAPACITY: usize = 4096;
pub const STACK_CAPACITY: usize = 16;
pub const NUM_REGISTERS: usize = 16;

pub const CPU_TIME_PER_INSTRUCTION: Duration =
    Duration::from_millis(1000 / CPU_CLOCK_SPEED_HZ as u64);
pub const DISPLAY_TIME_PER_UPDATE: Duration = Duration::from_millis(1000 / FRAME_RATE as u64);

pub const FONT_SET: [u8; 80] = [
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
    0x20, 0x60, 0x20, 0x20, 0x70, // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
    0xF0, 0x80, 0xF0, 0x80, 0x80, // F
];

pub const BEEP_FREQUENCY_HZ: i32 = 44100;
pub const BEEP_VOLUME: f32 = 0.1;
